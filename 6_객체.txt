-프로그래밍 관점 : 객체 지향 vs 절차 지향

[ 객체 : Object ]
    - **주체(subject) : '나'라는 실체, 중심
    - **객체(object) : 주체(나)가 아닌 다른 실체(타인)
    - 객체지향 프로그래밍
        - 객체를 중심으로 하는 프로그래밍 패러다임
        - 주체(나/개발자/실체) <------> 객체(컴퓨터/실체들)
            즉) 개발자가 아닌 컴퓨터에서 실체물을 만들어내면 만들어진 것들은 모두 객체
        - 생활속 객체
            -  안경, 의자, 컴퓨터, CPU, 강의실(공간), 강의, 책, 공기, 종이 등등
            - 사람(객체) : *기준* 김현수(주체) ---> 박희만(객체)
                - 김현수 기준으로는 김현수가 주체가 되고 김현수가 바라보는 박희만은 객체가 된다.
        - 컴퓨터속 객체
             - 고유한 속성 또는 행동 가진다.
             - 물리적으로 존재하거나 논리(추상)적으로 존재하는 것들
             - 인기가 많은 이유 : 세상에 모든 것들을 성질/행동을 디지털화 할 수 있다.
             - 객체지향 프로그래밍 언어 : JS , JAVA, PYTHON, C# 등등

    1. JS 객체 : 
        1. 클래스 기반의(class-object) 객체
        2. 클래스가 없는(class-free object) 객체
        -> 즉 JS는 클래스(설계도) 있어도 없어도 객체 생성이 가능하다.

    2. JS 객체 형태 : {속성명 : 값, 속성명 : 값, 속성명 : 값}
        - { } 중괄호를 이용한 { } 1개 하나의 객체로 취급하고 각 속성들은 ,(쉼표)로 구분한다.
